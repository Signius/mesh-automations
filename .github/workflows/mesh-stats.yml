name: Mesh SDK Usage Stats

on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight UTC
  workflow_dispatch:

jobs:
  search-mesh-usage:
    runs-on: ubuntu-latest
    steps:
      - name: Search for Mesh SDK Usage
        run: |
          # Search for @meshsdk/core in package.json
          CORE_COUNT=$(curl -s -H "Accept: application/vnd.github.v3+json" \
               -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               "https://api.github.com/search/code?q=%22%40meshsdk/core%22+in:file+filename:package.json" \
               | jq '.total_count')
          
          # Search for @meshsdk/core in any file
          CORE_ANY_COUNT=$(curl -s -H "Accept: application/vnd.github.v3+json" \
               -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               "https://api.github.com/search/code?q=%22%40meshsdk/core%22" \
               | jq '.total_count')
          
          # Get npm download stats for various time periods - simplified to just get the downloads number
          LAST_DAY=$(curl -s "https://api.npmjs.org/downloads/point/last-day/@meshsdk/core" | jq '.downloads')
          LAST_WEEK=$(curl -s "https://api.npmjs.org/downloads/point/last-week/@meshsdk/core" | jq '.downloads')
          LAST_MONTH=$(curl -s "https://api.npmjs.org/downloads/point/last-month/@meshsdk/core" | jq '.downloads')
          LAST_YEAR=$(curl -s "https://api.npmjs.org/downloads/point/last-year/@meshsdk/core" | jq '.downloads')
          
          # Get data for related packages if any
          REACT_PACKAGE_DOWNLOADS=$(curl -s "https://api.npmjs.org/downloads/point/last-month/@meshsdk/react" | jq '.downloads')
          
          # Get package version info - simplified
          LATEST_VERSION=$(curl -s "https://registry.npmjs.org/@meshsdk/core" | jq -r '."dist-tags".latest')
          
          # Get dependents count from npm
          DEPENDENTS_INFO=$(curl -s "https://registry.npmjs.org/-/v1/search?text=dependencies:@meshsdk/core&size=1" | jq '.total')
          
          # Create npm-stat URLs
          CURRENT_DATE=$(date +"%Y-%m-%d")
          ONE_MONTH_AGO=$(date -d "1 month ago" +"%Y-%m-%d")
          ONE_YEAR_AGO=$(date -d "1 year ago" +"%Y-%m-%d")
          
          NPM_STAT_URL="https://npm-stat.com/charts.html?package=@meshsdk/core&from=${ONE_YEAR_AGO}&to=${CURRENT_DATE}"
          NPM_STAT_COMPARE_URL="https://npm-stat.com/charts.html?package=@meshsdk/core,@meshsdk/react&from=${ONE_YEAR_AGO}&to=${CURRENT_DATE}"
          
          # For weekly trend, get the data but simplify the output format
          WEEKLY_TREND_DATA=$(curl -s "https://api.npmjs.org/downloads/range/${ONE_MONTH_AGO}:${CURRENT_DATE}/@meshsdk/core")
          WEEKLY_DOWNLOADS=$(echo "$WEEKLY_TREND_DATA" | jq '.downloads | map(.downloads) | add')
          
          # Output complete JSON result with proper escaping
          cat > mesh_stats.json << EOF
          {
            "github": {
              "core_in_package_json": $CORE_COUNT,
              "core_in_any_file": $CORE_ANY_COUNT
            },
            "npm": {
              "downloads": {
                "last_day": $LAST_DAY,
                "last_week": $LAST_WEEK,
                "last_month": $LAST_MONTH,
                "last_year": $LAST_YEAR,
                "weekly_sum": $WEEKLY_DOWNLOADS
              },
              "react_package_downloads": $REACT_PACKAGE_DOWNLOADS,
              "latest_version": "$LATEST_VERSION",
              "dependents_count": $DEPENDENTS_INFO
            },
            "urls": {
              "npm_stat_url": "$NPM_STAT_URL",
              "npm_stat_compare_url": "$NPM_STAT_COMPARE_URL"
            }
          }
          EOF
          
          # Display results in the action log
          cat mesh_stats.json